apiVersion: batch/v1
kind: Job
metadata:
  name: extract-policy-arn
  annotations:
    argocd.argoproj.io/sync-wave: "2"
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    spec:
      serviceAccountName: {{ .Values.serviceAccountName }}
      containers:
        - name: extract-policy-arn
          image: bitnami/kubectl:latest
          command:
            - /bin/sh
            - -c
            - |
              until kubectl get policy.iam.services.k8s.aws s3-access-policy -o jsonpath='{.status.ackResourceMetadata.arn}'; do
                echo "Waiting for IAM Policy ARN..."
                sleep 5
              done
              POLICY_ARN=$(kubectl get policy.iam.services.k8s.aws s3-access-policy -o jsonpath='{.status.ackResourceMetadata.arn}')
              kubectl create secret generic iam-policy-arn --from-literal=policyArn=$POLICY_ARN --dry-run=client -o yaml | kubectl apply -f -
      restartPolicy: OnFailure